<!--
音乐播放页面，需要打开titleBar,manifest.json文件默认titleBar关闭,请在manifest.json文件中配置display.pages设置以下信息：
   "Page_VideoDetail": {
                "titleBar": true,
                "barBackgroundColor": "#ffffff"
            }
            barBackgroundColor设置页面背景颜色
 -->
<template>
    <div class="audio-content">

        <text class="audio-title">{{currentTitle}}</text>
        <div class="audio-img">
            <image src="{{image}}"></image>
        </div>
        <div class="audio-control">
            <div class="audio-progress">
                <text class="audio-time-left">{{showTime}}</text>
                <slider class="slider" style="selected-color:{{color}};" value="{{time}}" onchange="getValue('time')"
                    max="{{total}}"></slider>
                <text class="audio-time-right">{{showTotal}}</text>
            </div>
            <!-- 控制条试验区 -->
            <div class="audio-button">
                <image class="audio-repeat" src="img/silence.png" onclick="loop"></image>
                <!-- 上一首按钮 -->
                <stack class="audio-last">
                    <div class="pre-next-bg" style="background-color: {{color}};"></div>
                    <image src="img/pre.png" class="audio-next" onclick="last"></image>
                </stack>

                <!-- 播放或者暂停按钮 -->
                <stack class="play_stack">
                    <div class="play_background" style="background-color: {{color}};"></div>
                    <image src="img/play.png" class="play_background" if="{{isPlayImg}}" onclick="play"></image>
                    <image src="img/pause.png" class="play_background" if="{{!isPlayImg}}" onclick="pause"></image>
                </stack>
                <!-- 下一首按钮 -->
                <stack class="audio-last">
                    <div class="pre-next-bg" style="background-color: {{color}};"></div>
                    <image src="img/next.png" class="audio-next" onclick="next"></image>
                </stack>
                <image class="audio-more" onclick="showCatalog()" src="img/list.png"></image>
            </div>
        </div>
        <div class="{{catalogStatus===true?'hearing-shadow-show':'hearing-shadow-none'}}" onclick="closeCatalog()">
            <div class="{{catalogStatus===true?'hearing-catalog-show':'hearing-catalog-none'}}">
                <text class="catalog-top">播放列表 ({{catalogueList.length}})</text>
                <list class="catalog-list">
                    <list-item type="catalog-item" class="catalog-item" for="item in catalogueList" onclick="toHearing(item,$idx)">
                        <div class="left">
                            <div class="top">
                                <text class="title_name {{item.isHearing?'activate':''}}">
                                    {{item.title}}
                                </text>
                            </div>
                            <div class="bottom">
                                <image class="clock" src="./img/clock.png"></image>
                                <text class="time"> {{item.duration}}</text>
                            </div>
                        </div>
                        <div class="right">
                            <image class="{{item.isHearing?'music-paly-png':'music-paly-png-none'}}" src="./img/ic_music_paly.png"></image>
                            <image class="music_off" src="./img/off.png"></image>
                        </div>
                    </list-item>
                </list>
                <text class="catalog-bottom" onclick="closeCatalog()">关闭</text>
            </div>
        </div>
    </div>
</template>

<style>
    .play_stack {
        margin: 0px 31.2px 0px 31.2px;
    }

    .play_background {
        width: 64.8px;
        height: 64.8px;
        border-radius: 32.4px;
    }

    .audio-back {
        width: 100%;
        height: 48px;
        align-items: center;
    }

    .audio-back image {
        margin-left: 15.8px;
        width: 24px;
        height: 24px;
    }

    .audio-content {
        flex-direction: column;
        align-items: center;
        background-color: #ffffff;
        height: 100%;
    }

    .audio-title {
        color: #1a1a1a;
        font-size: 18px;
        margin-top: 8px;
    }

    .audio-img {
        width: 100%;
        height: 80%;
        justify-content: center;
        align-items: center;
    }

    .audio-img image {
        width: 224.2px;
        height: 224.2px;
        border-radius: 114.2px;
    }

    .audio-control {
        flex-direction: column;
        height: 129.6px;
        justify-content: center;
        align-items: center;
    }

    .audio-progress {
        margin-bottom: 17.8px;
    }

    .audio-time-left {
        width: 28.8px;
        height: 15.4px;
        color: #1a1a1a;
        font-size: 10.9px;
        opacity: 0.75;
    }

    .audio-time-right {
        width: 28.8px;
        height: 15.4px;
        color: #1a1a1a;
        font-size: 10.9px;
        opacity: 0.75;
    }

    .slider {
        selected-color: #007dff;
        color: #e5e5e5;
        width: 77%;
        padding-left: 10.9px;
        padding-right: 10.8px;
    }

    .audio-button {
        width: 100%;
        justify-content: center;
        align-items: center;
    }

    .audio-repeat {
        width: 24px;
        height: 24px;
        margin-right: 36.5px;
    }

    .pre-next-bg {
        width: 24px;
        height: 24px;
        border-radius: 12px;
    }

    .audio-last {
        width: 39.8px;
        height: 39.8px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .audio-next {
        width: 39.8px;
        height: 39.8px;
        border-radius: 19.9px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border: 0.7px solid #cccccc;
    }

    .audio-play {
        width: 64.8px;
        height: 64.8px;
        margin: 0px 31.2px 0px 31.2px;
    }

    .audio-pause {
        width: 64.8px;
        height: 64.8px;
        margin: 0px 31.2px 0px 31.2px;
    }

    .audio-more {
        width: 24px;
        height: 24px;
        margin-left: 36.5px;
    }

    /* 播放列表 */

    .hearing-shadow-show {
        position: fixed;
        top: 0px;
        left: 0px;
        right: 0px;
        bottom: 0px;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .hearing-shadow-none {
        display: none;
    }

    .hearing-catalog-show {
        position: fixed;
        flex-direction: column;
        bottom: 0px;
        left: 0px;
        right: 0px;
        width: 100%;
        height: 423.8px;
        background-color: #f0f8ff;
        border-top-left-radius: 7.7px;
        border-top-right-radius: 7.7px;
    }

    .hearing-catalog-none {
        display: none;
    }

    .catalog-list {
        padding-top: 9.6px;
        padding-left: 15.8px;
        padding-right: 15.8px;
    }

    .catalog-item {
        justify-content: space-between;
        align-items: center;
        height: 62.4px;
        padding-top: 13px;
        padding-bottom: 13px;
        border-top-width: 0.2px;
        border-top-color: rgba(0, 0, 0, 0.2);
    }

    .left {
        flex-direction: column;
    }

    .title_num {
        font-size: 15px;
        color: #1a1a1a;
    }

    .title_name {
        font-size: 15px;
        color: #1a1a1a;
    }

    .right {
        align-items: center;
        margin-left: 36px;
    }

    .music-paly-png {
        width: 20.2px;
        margin-right: 8.2px;
    }

    .music-paly-png-none {
        display: none;
    }

    .music_off {
        width: 24px;
        height: 24px;
    }

    .bottom {
        margin-top: 1.4px;
        align-items: center;
    }

    .clock {
        width: 12px;
        height: 12px;
    }

    .time {
        font-size: 13px;
        color: #1a1a1a;
        opacity: 0.5;
        margin-left: 3.8px;
    }

    .activate {
        color: #007dff;
    }

    .catalog-top {
        width: 100%;
        font-size: 18.2px;
        color: #1a1a1a;
        margin: 13.7px 15.8px 8.5px 15.8px;
    }

    .catalog-bottom {
        width: 100%;
        height: 72px;
        bottom: 0px;
        text-align: center;
        line-height: 24px;
        color: #005bba;
        font-size: 13.4px;
        background-color: #f0f8ff;
    }
</style>

<script>
    import audio from '@system.audio'
    import image from '@system.image'
    module.exports = {
        props: [
            'param'
        ],
        data: {
            color: '#007DFF',
            minTimeGap: 0,
            currentTitle: '',
            image: './img/Bitmap.png',
            select: 0,
            isPlayImg: false,
            isLoop: true,
            time: 0,
            showTime: '00:00',
            total: 0,
            showTotal: '00:00',
            music: [
                {
                    'title': 'dream it possible',
                    'image': './img/page-audio-img-1.png',
                    'src': 'http://od.qingting.fm/m4a/59db80de7cb8914779254b47_8041831_64.m4a'
                },
                {
                    'title': '我的梦',
                    'image': './img/page-audio-img-1.png',
                    'src': 'http://od.qingting.fm/m4a/59db80de7cb8914779254b47_8041831_64.m4a'
                },
                {
                    'title': 'The truth that you leave',
                    'image': './img/page-audio-img-1.png',
                    'src': 'http://od.qingting.fm/m4a/59db80de7cb8914779254b47_8041831_64.m4a'
                },
                {
                    'title': '大鱼',
                    'image': './img/page-audio-img-1.png',
                    'src': 'http://od.qingting.fm/m4a/59db80de7cb8914779254b47_8041831_64.m4a'
                },
                {
                    'title': 'The truth that you leave',
                    'image': './img/page-audio-img-1.png',
                    'src': 'http://od.qingting.fm/m4a/59db80de7cb8914779254b47_8041831_64.m4a'
                },
                {
                    'title': '大鱼',
                    'image': './img/page-audio-img-1.png',
                    'src': 'http://od.qingting.fm/m4a/59db80de7cb8914779254b47_8041831_64.m4a'
                },

            ],
            catalogueList: [
                { title: "dream it possible", isHearing: true, duration: `4'54"` },
                { title: "我的梦", isHearing: false, duration: `4'54"` },
                { title: "dream it possible", isHearing: false, duration: `4'54"` },
                { title: "我的梦", isHearing: false, duration: `4'54"` },
                { title: "dream it possible", isHearing: false, duration: `4'54"` },
                { title: "我的梦", isHearing: false, duration: `4'54"` },
            ],
            catalogStatus: false
        },
        //初始化进来自动播放
        onInit: function () {
            audio.stop();
            // this.$page.setTitleBar方法设置titleBar的标题，titleBar的背景颜色，字体颜色等
            // 是否关闭titleBar,以及页面背景颜色，请在manifest中进行设置
            // 参考页面上方说明
            this.$page.setTitleBar({ text: this.currentTitle, menu: false, backgroundColor: '#FFFFFF' });
            this.currentTitle = this.music[this.select].title;
            this.image = this.music[this.select].image;
            audio.src = this.music[this.select].src;

            // 获取上一个页面传入的音频信息
            if (this.item) {
                let currentAuidoItem = JSON.parse(this.item);
                audio.src = currentAuidoItem.src;
                this.currentTitle = currentAuidoItem.title;
            }


            audio.autoplay = true; //自动播放
            audio.loop = true; //是否循环

            audio.muted = false; //是否静音
            audio.currentTime = 0; //播放当前时间

            audio.ondurationchange = () => {
                // 音频总时长
                this.total = audio.duration;
                this.showTotal = this.changeTime(this.total);

                // 滑动进度条的滑动的单位为秒
                let percnettime = audio.duration * 0.1;
                // 取 10秒或者 总时长十分之一的小者 作为最小滑动距离
                this.minTimeGap = percnettime > 10 ? percnettime : 10;
            };

            audio.ontimeupdate = () => {
                this.showTime = this.changeTime(audio.currentTime);
                this.time = audio.currentTime;
                if (audio.currentTime === audio.duration) {
                    this.next();
                }
            };

        },
        //开始
        play() {
            audio.play();
            this.isPlayImg = false;
        },
        //暂停
        pause() {
            audio.pause();
            this.isPlayImg = true;
        },
        //上一首
        last() {
            audio.stop();
            if (this.select > 0) {
                this.select = this.select - 1;
                audio.src = this.music[this.select].src;
                audio.currentTime = 0;
                this.time = 0;
                audio.play();
                this.isPlayImg = false;
                this.currentTitle = this.music[this.select].title;
                this.image = this.music[this.select].image;
                this.catalogueList.forEach(element => {
                    element.isHearing = false;
                });
                this.catalogueList[this.select].isHearing = true;

            } else {
                this.select = this.music.length - 1;
                audio.src = this.music[this.select].src;
                audio.currentTime = 0;
                this.time = 0;
                audio.play();
                this.isPlayImg = false;
                this.currentTitle = this.music[this.select].title;
                this.image = this.music[this.select].image;
                this.catalogueList.forEach(element => {
                    element.isHearing = false;
                });
                this.catalogueList[this.select].isHearing = true;

            }
        },
        //下一首
        next() {
            audio.stop();
            if (this.select < this.music.length - 1) {
                this.select = this.select + 1;
                audio.src = this.music[this.select].src;
                audio.currentTime = 0;
                this.time = 0;
                audio.play();
                this.isPlayImg = false;
                this.currentTitle = this.music[this.select].title;
                this.image = this.music[this.select].image;
                this.catalogueList.forEach(element => {
                    element.isHearing = false;
                });
                this.catalogueList[this.select].isHearing = true;

            } else {
                this.select = 0;
                audio.src = this.music[0].src;
                audio.currentTime = 0;
                this.time = 0;
                audio.play();
                this.isPlayImg = false;
                this.currentTitle = this.music[0].title;
                this.image = this.music[0].image;
                this.catalogueList.forEach(element => {
                    element.isHearing = false;
                });
                this.catalogueList[0].isHearing = true;

            }
        },
        //是否循环播放
        loop() {
            this.isLoop = !this.isLoop;
            audio.loop = this.isLoop;
        },
        getValue(name, e) {

            let gap = Math.abs(e.progress - audio.currentTime);
            if (gap > this.minTimeGap) {
                this.time = e.progress;
                audio.currentTime = e.progress;
            }
        },
        changeTime(time) {
            var result = "00:00";
            if (time < 60) {
                time = time < 10 ? "0" + time : time;
                result = "00:" + time;
            } else if (time >= 60) {
                var minute = Math.floor(time / 60);
                var timeInt = 60 * minute;
                time = (time % timeInt < 10) ? "0" + time % timeInt : time % timeInt;
                result = "0" + minute + ":" + time;
            }
            return result;
        },
        getColor() {
            let _this = this;
            image.pickColor({
                uri: _this.music[_this.select].image,
                success: function (data) {
                    _this.color = data.color;
                },
                fail: function (data, code) {
                    console.log('handling fail, code = ' + code);
                },
                complete: function (data, code) {
                    console.log('handling complete, code = ' + code);
                }
            });
        },
        showCatalog() {
            this.catalogStatus = true;
            //设置标题栏背景
            this.$page.setTitleBar({ menu: false, backgroundColor: 'rgba(0,0,0,0.5)' });
        },
        closeCatalog() {
            this.catalogStatus = false;
            //设置标题栏背景
            this.$page.setTitleBar({ menu: false, backgroundColor: '#FFFFFF' });
        },
        toHearing(item, index) {
            audio.stop();
            this.catalogueList.forEach(element => {
                element.isHearing = false;
            });
            item.isHearing = true;

            //切换音频
            this.select = index;
            audio.src = this.music[index].src;
            audio.currentTime = 0;
            this.time = 0;
            audio.play();
            this.isPlayImg = false;
            this.currentTitle = this.music[index].title;
            this.image = this.music[index].image;

        }
    }
</script>
